sau
loạt
bài
viết
của
tôi
về
giới
thiệu
viện
vật
lý
trò
box2d
tiếp
tục
một
số
hiện
thực
các
tượng
hiệu
ứng
nhằm
giúp
nghiệm
làm
việc
với
này
bài
tách
cắt
đối
là
mà
bạn
có
thể
thấy
nhiều
trong
games
áp
dụng
nó
để
vụ
nổ
đến
hướng
đến
những
lập
trình
đã
kiến
thức
cơ
bản
2d
đặc
biệt
và
chưa
nội
sẽ
tạo
ra
đó
object1
object2
cần
physics
world
bodies
casting
sử
touches
event
#define
ptm_ratio
32
void
helloworld
ontouchended
touch*
touch
event*
{
bool
ontouchbegan
auto
location
=
getlocation
position1.x
location.x
position1.y
location.y
return
true
ontouchmoved
position2.x
position2.y
tích
điểm
đầu
cuối
position1
được
xác
định
khi
began
position2
move
đọc
phần
6
debugdraw
drawsegment
b2color
0.8f
if
&amp
raycastclosestcallback
callback
m_world
raycast
callback2
dòng
1
vẽ
lên
màn
hình
đoạn
thẳng
3
10
2
sao
lại
vì
mỗi
chỉ
tại
gần
nhất
nhưng
tới
vậy
phải
thứ
code
update
float
dt
dùng
chuyển
đổi
vị
pixel
ngược
*
hàm
tính
toán
đường
điều
nói
rõ
hơn
ở
phía
dưới
calulate_determinant
x1
y1
x2
y2
x3
y3
x1*y2
+
x2*y3
x3*y1
y1*x2
y2*x3
y3*x1
**
lẽ
thuộc
cập
nhật
cho
wolrd
int
positioniterations
velocityiterations
deltatime
std
b2body
todestroy
step
for
*body
getbodylist
body
null
getnext
getuserdata
sprite
*sprite
setposition
point
getposition
.x
.y
setrotation
cc_radians_to_degrees
getangle
end
clearforces
drawdebugdata
cuting
==
*ở
trên
hộp
giờ
thì
dạng
cụ
gì
b2fixture
*originalfixture
getfixturelist
*các
giác
b2polygonshape
*originalpolygon
b2polygonshape*
originalfixture
getshape
lấy
lượng
đỉnh
thành
đây
vertexcount
originalpolygon
getvertexcount
kiện
nghĩa
lúc
callback1
cùng
callback.m_hit
callback2.m_hit
căt
chính
độ
fration
tròn
màu
đỏ
drawcircle
callback.m_point
0.3f
1.5f
0.0f
callback2.m_point
nơi
trữ
vertexcountofobject1
0
vertexcountofobject2
b2vec2
*vertexofobject1
b2vec2*
calloc
24
sizeof
*vertexofobject2
fraction
ví
dụ
e
tập
sắp
xếp
theo
tự
đồng
hồ
nên
như
fraction1
fraction2
vertexofobject1
vertexcountofobject1++
vertexofobject2
vertexcountofobject2++
*tiếp
loại
bị
biết
nào
phép
giá
trị
determinant
kiểm
loại.*
index
index++
getvertex
*nếu
đang
không
nữa*
||
continue
else
point.x
point.y
calculate_determinant_2x3
*đây
cách
thế
so
nếu
determitan
nửa
hay
biểu
thằng
còn
0.f
0.9f
0.4f
object
từ
tìm
thiết
nữa
remove
khởi
world*
chất
mới
giống
b2fixturedef
myfixturedef
myfixturedef.density
getdensity
myfixturedef.friction
getfriction
myfixturedef.restitution
getrestitution
*object1
polygonshape
polygonshape.set
myfixturedef.shape
b2bodydef
mybodydef
mybodydef.type
b2_dynamicbody
mybodydef.position.set
createbody
createfixture
*object2
polygonshape2
polygonshape2.set
mybodydef2
destroybody
delete
false
function
a
b
c
d
lần
lượt
chú
ý
cũng
mục
đích
rằng
hiểu
vấn
đề
tốt
hợp
đẹp
tối
thật
sự
ít
8
muốn
vào
b2settings.h
b2_maxpolygonvertives
bằng
23
chiều
giản
luôn
đúng
phức
tạp
đảm
bảo
rất
gốc
tọa
khác
nảy
giải
quyết
mềm
thiệp
lớp
thích
khó
cẩn
thận
qua
giữa
một
là
có
bạn
tại
hoặc
với
users
11
truong
dat
cutting_object_example
khảo
https
www.wikipedia.org